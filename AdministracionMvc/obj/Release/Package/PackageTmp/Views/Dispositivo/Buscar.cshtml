@model Administracion.BusinessLayer.Dto.Dispositivo

@{
    ViewBag.Title = "Buscar dispositivo";
}

<div class="container">
    <h2>Buscar dispositivo</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(model => model.TipoDeDispositivoId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TipoDeDispositivoId, new SelectList(ViewBag.ListaDeTiposDeDispositivos, "Id", "Nombre"), "Todos", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TipoDeDispositivoId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.EstatusDelDispositivoId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.EstatusDelDispositivoId, new SelectList(ViewBag.ListaDeEstatusDeDispositivo, "Id", "Nombre"), "Todos", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EstatusDelDispositivoId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.Label("ProyectoId", "Proyecto", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ProyectoId", new SelectList(ViewBag.ListaDeProyectos, "Id", "Nombre"), "Todos", new { @class = "form-control", onchange = "cargarAgencias();" })
                    @Html.ValidationMessageFor(model => model.TipoDeDispositivoId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.AgenciaId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select id="AgenciaId" name="AgenciaId" class="form-control">
                    </select>
                    @Html.ValidationMessageFor(model => model.AgenciaId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.NumeroDeSerie, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumeroDeSerie, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumeroDeSerie, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Buscar" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Regresar a la lista", "Index")
    </div>
</div>
@section Scripts {
    <script>
        function cargarAgencias() {
            var proyectoId;
            var select;

            select = document.getElementById("AgenciaId");
            select.innerHTML = "";

            proyectoId = document.getElementById("ProyectoId").value;
            console.log(proyectoId);
            $.ajax({
                url: "../Agencia/GetAll?ProyectoId=" + proyectoId,
                success: function (data) {
                    if (data.length > 0) {
                        option = document.createElement("option");
                        option.innerHTML = "Seleccione";
                        select.appendChild(option);
                        for (var item of data) {
                            var option;

                            option = document.createElement("option");
                            option.value = item.Id;
                            option.innerHTML = item.Clave + " " + item.Nombre;
                            select.appendChild(option);
                        }
                    }
                }
            });
        }
    </script>
}